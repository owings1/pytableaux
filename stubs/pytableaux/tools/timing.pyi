from typing import Iterator
from pytableaux.typing import _T

class TimingCommon:
    @classmethod
    def gen(cls: _T, n: int, *args, **kw) -> Iterator[_T]: ...

class StopWatch(TimingCommon):
    count: int
    def __init__(self, started: bool = ...) -> None: ...
    @property
    def running(self) -> bool: ...
    def start(self) -> None: ...
    def stop(self) -> None: ...
    def reset(self) -> StopWatch: ...
    def clear(self) -> StopWatch: ...
    def elapsed(self) -> int: ...
    def elapsed_avg(self) -> float: ...
    def elapsed_secs(self) -> int: ...
    def elapsed_ms(self) -> int: ...
    def summary(self) -> dict[str, int|float]: ...
    def _asdict(self) -> dict[str, int|float]:...
    def for_json(self) -> dict[str, int|float]:...
    def __float__(self) -> float: ...
    def __int__(self) -> int: ...
    def __enter__(self) -> StopWatch: ...
    def __exit__(self, type, value, traceback) -> None: ...

class Counter(TimingCommon):
    value: int
    def __init__(self, value: int = ...) -> None: ...
    def inc(self, n: int = ...) -> None: ...
    def __index__(self) -> int: ...
    def for_json(self) -> int: ...
    def __int__(self) -> int: ...

