from _typeshed import Incomplete
from pytableaux.tools.doc import AutodocProcessor, Processor, ReplaceProcessor
from sphinx.application import Sphinx
from sphinx.config import Config
from sphinx.ext import autodoc

class AttributeDocumenter(autodoc.AttributeDocumenter):
    def should_suppress_value_header(self) -> bool: ...

class RuledocInherit(AutodocProcessor):
    def applies(self): ...
    def run(self) -> None: ...

class RuledocExample(AutodocProcessor):
    def applies(self): ...
    def run(self) -> None: ...

class BuildtrunkExample(AutodocProcessor):
    def applies(self): ...
    def run(self) -> None: ...

class RolewrapReplace(ReplaceProcessor):
    def run(self) -> None: ...
    @property
    def defns(self): ...

class CopyFileTree(Processor):
    app: Incomplete
    def __init__(self, app: Sphinx, config: Config) -> None: ...
    def __call__(self, app: Sphinx, e: Exception|None): ...
    def validate(self) -> None: ...
    def run(self) -> None: ...

# Names in __all__ with no definition:
#   GlobalReplace
def setup(app: Sphinx)-> None:...
