.. _K3:

************************
K3 - Strong Kleene Logic
************************

.. contents:: :local:

K3 is a three-valued logic (:m:`T`, :m:`F`, and :m:`N`). It can be understood
as :ref:`FDE <FDE>` without the :m:`B` value.

.. automodule:: logics.k3

    Semantics
    =========

    .. autoclass:: Model

        .. autoattribute:: truth_values

        .. autoattribute:: designated_values

        .. autoattribute:: extensions

        .. autoattribute:: anti_extensions

        .. autoattribute:: atomics

        .. method:: value_of_operated(sentence)

            The value of a sentence with a truth-functional operator is determined by
            the values of its operands according to the following tables.

            //truth_tables//k3//

        .. method:: value_of_predicated(sentence)

            Like :ref:`FDE <FDE>`, K3 predication defines a predicate's *extenstion*
            and *anti-extension*. The value of a predicated sentence is determined as follows:

            A sentence with *n*-ary predicate :math:`P` over parameters :m:`ntuple`
            has the value:

            * :m:`T` iff :m:`ntuple` is in the *extension* of :math:`P` and
              not in the *anti-extension* of :math:`P`.

            * :m:`F` iff :m:`ntuple` is in the *anti-extension* of :math:`P`
              and not in the *extension* of :math:`P`.

            * :m:`N` iff :m:`ntuple` is in **neither** the extension nor the 
              anti-extension of :math:`P`.

            Note, unlike :ref:`FDE <FDE>`, there is an *exclusivity constraint*
            on a predicate's extension/anti-extension. This means that :m:`ntuple`
            cannot be in **both** the extension and the anti-extension of `P`.

            Like :ref:`FDE <FDE>`, there is no *exhaustion constraint*: there are permissible
            K3 models where some tuple :m:`ntuple` is in **neither** the extension nor the
            anti-extension of some predicate :math:`P`.

    Logical Consequence
    ===================

    **Logical Consequence** is defined just like in :ref:`CPL <cpl-consequence>`:

        | :math:`C` is a **Logical Consequence** of :math:`A` iff,
        | in all models where the value of :math:`A`is :m:`T`,
        | then value of :math:`C` is also :m:`T`.

    Alternatively, we can use the :ref:`FDE formulation <fde-consequence>`
    in terms of *designated* values, since K3 has only the designated value :m:`T`.

    Tableaux System
    ===============

    .. autoclass:: TableauxSystem
        :members: build_trunk

    .. autoclass:: TableauxRules
        :members:

    Notes
    =====

    Some notable features of K3 include:

    * Everything valid in :ref:`FDE <FDE>` is valid in K3.

    * Like :ref:`FDE <FDE>`, the Law of Excluded Middle, and Conditional Identity :s:`(A $ A)` fail.

    * Some cassical validities, such as *Modus Ponens*, *Modus Tollens*, *Disjunctive Syllogism*,
      and *DeMorgan* laws, are valid.
