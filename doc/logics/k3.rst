.. _K3:

*****************************
:m:`K3` - Strong Kleene Logic
*****************************

.. contents:: :local:

:m:`K3` is a three-valued logic (:m:`T`, :m:`F`, and :m:`N`). It can be understood
as :ref:`FDE <FDE>` without the :m:`B` value.

.. automodule:: logics.k3

    Semantics
    =========

    .. _k3-model:

    .. autoclass:: Model

        .. include:: include/fde/m.attributes.rst

        .. method:: truth_function(operator, a, b)

            The value of a sentence with a truth-functional operator is determined by
            the values of its operands according to the following tables.

            //truth_tables//k3//

        .. method:: value_of_predicated(sentence)

            Like :ref:`FDE <FDE>`, :m:`K3` predication defines a predicate's *extenstion*
            and *anti-extension*. The value of a predicated sentence is determined as follows:

            .. include:: include/k3/m.predication.rst

            Note, unlike :ref:`FDE <FDE>`, there is an *exclusivity constraint*
            on a predicate's extension/anti-extension. This means that :m:`ntuple`
            cannot be in **both** the extension and the anti-extension of `P`.

            Like :ref:`FDE <FDE>`, there is no *exhaustion constraint*: there are permissible
            :m:`K3` models where some tuple :m:`ntuple` is in **neither** the extension nor the
            anti-extension of some predicate :math:`P`.

        .. method:: value_of_existential(sentence)

            Existential quantification is defined similary to :ref:`FDE <fde-model>`,
            with the :m:`B` value.

            .. include:: include/k3/m.existential.rst

        .. method:: value_of_universal(sentence)

            Universal quantification is defined similary to :ref:`FDE <fde-model>`,
            with the :m:`B` value.

            .. include:: include/k3/m.universal.rst

    .. _k3-consequence:

    Logical Consequence
    -------------------

    **Logical Consequence** is defined just like in :ref:`CPL <cpl-consequence>`:

        ..include:: include/k3/m.consequence.rst

    Alternatively, we can use the :ref:`FDE formulation <fde-consequence>`
    in terms of *designated* values, since :m:`K3` has only the designated value :m:`T`.

    Tableaux System
    ===============

    .. _k3-system:

    .. autoclass:: TableauxSystem
        :members: build_trunk

    .. autoclass:: TableauxRules
        :members:

    Notes
    -----

    Some notable features of :m:`K3` include:

    * Everything valid in :ref:`FDE <FDE>` is valid in :m:`K3`.

    * Like :ref:`FDE <FDE>`, the Law of Excluded Middle, and Conditional Identity :s:`(A $ A)` fail.

    * Some cassical validities, such as *Modus Ponens*, *Modus Tollens*, *Disjunctive Syllogism*,
      and *DeMorgan* laws, are valid.
